import{_ as e,c as t,o as r,ae as o}from"./chunks/framework.CqV5Rifv.js";const m=JSON.parse('{"title":"Introduction to JSCore and Yarnwrap","description":"","frontmatter":{},"headers":[],"relativePath":"dev/getting-started/introduction-to-jscore.md","filePath":"dev/getting-started/introduction-to-jscore.md"}'),i={name:"dev/getting-started/introduction-to-jscore.md"};function s(n,a,d,c,l,h){return r(),t("div",null,a[0]||(a[0]=[o('<h1 id="introduction-to-jscore-and-yarnwrap" tabindex="-1">Introduction to JSCore and Yarnwrap <a class="header-anchor" href="#introduction-to-jscore-and-yarnwrap" aria-label="Permalink to &quot;Introduction to JSCore and Yarnwrap&quot;">​</a></h1><h2 id="what-is-jscore" tabindex="-1">What is JSCore? <a class="header-anchor" href="#what-is-jscore" aria-label="Permalink to &quot;What is JSCore?&quot;">​</a></h2><p>JSCore allows JavaScript to interact with Minecraft: Java Edition.</p><p>User-written scripts can directly access existing Java methods in Minecraft, allowing for customisation capabilities similar to that of modding. With support for hot reloading of scripts, providing a painless replacement for Java modding.</p><p>JSCore comes with <a href="https://yarnwrap.siri.ws" target="_blank" rel="noreferrer">Yarnwrap</a> - a thin wrapper translating methods from Minecraft to classes and functions callable from JS.</p><h2 id="why-is-yarnwrap-needed" tabindex="-1">Why is Yarnwrap needed? <a class="header-anchor" href="#why-is-yarnwrap-needed" aria-label="Permalink to &quot;Why is Yarnwrap needed?&quot;">​</a></h2><p>Minecraft contains obfuscated code where naming of classes and methods are randomised to hide their purpose. Modding toolkits such as Fabric replaces readable class names (e.g. <code>PlayerEntity</code>) to the obfuscated names (e.g. <code>Class_1234</code>) at compile-time to allow readable names to be used in modding.</p><p>However, compile-time mappings are not possible for scripting languages, so Java classes and methods must be referenced by their real name.</p><p>Yarnwrap consists of thousands of classes in their readable names, each wraps an obfuscated class. When a Yarnwrap method is called, the underlying/obfuscated method gets invoked. In this case scripting languages can access internal Minecraft methods through classes provided by Yarnwrap.</p><h2 id="what-is-rhino" tabindex="-1">What is Rhino? <a class="header-anchor" href="#what-is-rhino" aria-label="Permalink to &quot;What is Rhino?&quot;">​</a></h2><p>Rhino is a vanilla JavaScript runtime by Mozilla. It tightly integrates with Java - allowing Java code to be used from JS and vice versa.</p><p>The runtime evaluates JavaScript code similar to a REPL, where each script file has full access to all values defined previously. In essence all variables in Rhino is global unless specified otherwise with appropriate scoping.</p>',12)]))}const u=e(i,[["render",s]]);export{m as __pageData,u as default};
