import{_ as r,c as o,o as t,ae as a}from"./chunks/framework.CqV5Rifv.js";const b=JSON.parse('{"title":"JSCore Book","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),s={name:"README.md"};function i(n,e,l,c,d,p){return t(),o("div",null,e[0]||(e[0]=[a('<h1 id="jscore-book" tabindex="-1">JSCore Book <a class="header-anchor" href="#jscore-book" aria-label="Permalink to &quot;JSCore Book&quot;">​</a></h1><p>The JSCore book is written in Markdown built using <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a>.</p><p>Hosted on <a href="https://jscore.siri.ws" target="_blank" rel="noreferrer">jscore.siri.ws</a> (<a href="https://fabriccore.github.io/jscore" target="_blank" rel="noreferrer">Mirror</a>)</p><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><ul><li><strong>Player guides</strong>: expansion needed, while being as concise as possible.</li><li><strong>JSCore by Examples</strong>: more example projects would be nice, so will better code practices suggestions be.</li></ul>',5)]))}const h=r(s,[["render",i]]);export{b as __pageData,h as default};
